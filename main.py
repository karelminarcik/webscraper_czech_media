import sqlite3
from datetime import datetime
from seznam_scraper import scrape_seznam
from idnes_scraper import scrape_idnes
from irozhlas_sraper import scrape_irozhlas
from acr_mo_gov import scrape_acr
from denik_scraper import scrape_denik

# üîπ Vytvo≈ôen√≠ datab√°ze (pouze pokud neexistuje)
def create_db():
    conn = sqlite3.connect("news.db")
    cursor = conn.cursor()

    cursor.execute("""
        CREATE TABLE IF NOT EXISTS articles (  -- ‚úÖ IF NOT EXISTS zabr√°n√≠ p≈ôeps√°n√≠ tabulky
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT,
            link TEXT UNIQUE,
            source TEXT,
            date_added TEXT  -- Ukl√°d√°me datum jako text YYYY-MM-DD
        )
    """)

    conn.commit()
    conn.close()

# üîπ Ulo≈æen√≠ ƒçl√°nk≈Ø do datab√°ze
def save_to_db(articles):
    conn = sqlite3.connect("news.db")
    cursor = conn.cursor()

    today_date = datetime.now().strftime("%Y-%m-%d")  # Aktu√°ln√≠ datum

    for article in articles:
        try:
            cursor.execute("""
                INSERT INTO articles (title, link, source, date_added) 
                VALUES (?, ?, ?, ?)
            """, (article["title"], article["link"], article["source"], today_date))
        except sqlite3.IntegrityError:
            continue  # Pokud je ƒçl√°nek u≈æ v DB, p≈ôeskoƒç√≠me

    conn.commit()

    # ‚úÖ Kontrola: Vyp√≠≈°eme 5 nejnovƒõj≈°√≠ch ƒçl√°nk≈Ø
    cursor.execute("SELECT * FROM articles ORDER BY id DESC LIMIT 5")
    print("‚úÖ Posledn√≠ ƒçl√°nky v datab√°zi:")
    for row in cursor.fetchall():
        print(row)

    conn.close()

# üîπ Hlavn√≠ funkce: Scrapov√°n√≠ a ukl√°d√°n√≠ do DB
def main():
    create_db()  # ‚úÖ U≈æ se nevytv√°≈ô√≠ nov√° tabulka, pokud existuje

    all_articles = []
    all_articles.extend(scrape_irozhlas())
    all_articles.extend(scrape_idnes())
    all_articles.extend(scrape_seznam())
    all_articles.extend(scrape_acr())
    all_articles.extend(scrape_denik())

    save_to_db(all_articles)  # Ulo≈æ√≠ ƒçl√°nky do datab√°ze

    print(f"Ulo≈æeno {len(all_articles)} ƒçl√°nk≈Ø do datab√°ze.")

if __name__ == "__main__":
    main()
